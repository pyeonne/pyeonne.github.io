---
// Astro frontmatter: JavaScript runs at build time in Astro, before the HTML is generated.

import BaseLayout from '../../layouts/base-layout.astro';
// Define an array of objects, each representing a card with an image URL.
const cards = [
  {
    title: 'Card 1',
    href: '#_',
    imageUrl:
      'https://i.pinimg.com/564x/eb/b3/bd/ebb3bd6c322463cee8b7b17659792830.jpg',
  },
  {
    title: 'Card 2',
    href: '#_',
    imageUrl:
      'https://i.pinimg.com/564x/9b/0e/e1/9b0ee1146eba537b5b1e207928350e0f.jpg',
  },
  {
    title: 'Card 3',
    href: '#_',
    imageUrl:
      'https://i.pinimg.com/564x/b6/91/52/b691526e863a332d1708eb1d9da0d403.jpg',
  },
];
---

<BaseLayout>
  <section x-data="{ atTop: true }">
    <!-- Alpine.js initializes data properties for the component. `atTop` determines if the page is scrolled past a certain point. -->
    <div
      class="fixed inset-x-0 z-50 mx-auto mt-4 w-full max-w-2xl transform rounded-full bg-black px-8 py-4 transition-all duration-1000 ease-in-out"
      :class="{ 'bg-black bg-opacity-90 backdrop-blur-xl max-w-4xl ': !atTop, 'max-w-2xl': atTop }"
      @scroll.window="atTop = (window.pageYOffset > 50 ? false : true)"
    >
      <!-- This div is styled to change its appearance based on the scroll position, toggling classes for background, opacity, blur, and width. -->
      <div
        x-data="{ open: false }"
        class="md:flex-row md:items-center md:justify-between mx-auto flex w-full flex-col p-2"
      >
        <!-- Another Alpine.js component for handling the navigation menu's open/close state. -->

        <div class="flex flex-row items-center justify-between">
          <span
            class="font-bold uppercase tracking-tighter text-black"
            :class="{ 'text-black': atTop, 'text-white': !atTop }"
          >
            <!-- This span changes color based on the scroll position, using the `atTop` state. -->

            ✺ Lexington
          </span>
          <button class="md:hidden focus:outline-none">
            <!---- SVG Burger goes here ---->
          </button>
        </div>
        <nav
          :class="{'flex': open, 'hidden': !open}"
          class="md:flex md:flex-row md:pb-0 hidden flex-grow flex-col justify-end gap-8 pb-4 lg:ml-auto"
        >
          <!-- This navigation changes its display based on the `open` state, showing on mobile when `open` is true. -->
          <a :class="{ 'text-black': atTop, 'text-white': !atTop }" href="#_"
            >About</a
          >
          <!-- Links within the navigation also change color based on the scroll position. -->
          <a :class="{ 'text-black': atTop, 'text-white': !atTop }" href="#_"
            >Work</a
          >
          <a :class="{ 'text-black': atTop, 'text-white': !atTop }" href="#_"
            >Blog</a
          >
        </nav>
      </div>
    </div>
    <div class="bg-white">
      <div
        class="md:px-12 mx-auto px-8 py-24 text-center text-zinc-500 lg:px-24 lg:pt-64"
      >
        <div
          class="prose prose-sm prose-headings:font-normal prose-headings:text-xl mx-auto max-w-sm text-gray-500"
        >
          <div>
            <h1>Adaptable navigation</h1>
            <p class="text-balance">
              Scroll down to see the navigation change its appearance based on
              the scroll position.
            </p>
          </div>
        </div>

        <!--
// Grid layout for displaying cards.
//
// Mapping over `cards` array defined in Astro frontmatter to render each card.
//
// Each card is an image with hover effects.
-->

        <div
          class="sm:grid-cols-1 mx-auto mt-24 grid max-w-2xl grid-cols-1 gap-8 gap-y-28"
        >
          {
            cards.map((card) => (
              <a href={card.href}>
                <div>
                  <img
                    class="hover:shadow-3xl w-full rounded-3xl shadow duration-500 hover:-translate-y-12"
                    src={card.imageUrl}
                    alt={card.title}
                  />
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </div>
    <!-- Starts links to tutorial -->
    <div
      class="sm:flex sm:justify-center pointer-events-none fixed inset-x-0 bottom-0 p-2"
    >
      <div
        class="pointer-events-auto flex w-full max-w-md divide-x divide-neutral-200 rounded-lg border bg-white shadow-xl"
      >
        <div class="flex w-0 flex-1 items-center p-4">
          <div class="w-full">
            <p class="text-sm font-medium text-neutral-900">Tutorial</p>
            <p class="mt-1 text-sm text-neutral-500">
              How to create an adaptable navigation with Astro, Tailwind CSS,
              and Alpine.js
            </p>
            <p class="mt-2 text-xs text-orange-500 underline">
              <a href="https://lexingtonthemes.com"> by © Lexington Themes</a>
            </p>
          </div>
        </div>
        <div class="flex">
          <div class="flex flex-col divide-y divide-neutral-200">
            <div class="flex h-0 flex-1">
              <a
                href="https://lexingtonthemes.com/tutorials/how-to-create-an-animated-navigation-with-alpine-js"
                type="button"
                class="flex w-full items-center justify-center rounded-none rounded-tr-lg border border-transparent px-4 py-3 text-sm font-medium text-orange-600 hover:text-orange-500 focus:z-10 focus:outline-none focus:ring-2 focus:ring-orange-500"
                >Tutorial</a
              >
            </div>
            <div class="flex h-0 flex-1">
              <a
                href="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/adaptable-navigation/index.astro"
                class="flex w-full items-center justify-center rounded-none rounded-br-lg border border-transparent px-4 py-3 text-sm font-medium text-neutral-700 hover:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-orange-500"
                >Get the code</a
              >
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Ends links to tutorial -->
  </section>
</BaseLayout>
